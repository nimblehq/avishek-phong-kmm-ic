name: Release iOS Production App to AppStore Connect

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  shared_test:
      name: Running tests in Shared module
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: shared
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Java JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Setup Konfig Properties
        env:
          KMM_KONFIG_PROPERTIES: ${{ secrets.KMM_KONFIG_PROPERTIES }}
        run: |
          touch ../buildKonfig.properties
          echo $KMM_KONFIG_PROPERTIES | base64 --decode > ../buildKonfig.properties

      - name: Running tests
        run: |
          cd ..
          ./gradlew clean shared:test

  ios_release_production:
    name: Automatic Release iOS Production App to AppStore Connect
    runs-on: macos-latest
    defaults:
        run:
          working-directory: iosApp
    steps:
      - name: Set up JAVA 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install SSH key - For accessing match repo
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - uses: actions/cache@v3
        id: bunlderCache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle install
        run: bundle install --path vendor/bundle

      - name: Setup Konfig Properties
        env:
          KMM_KONFIG_PROPERTIES: ${{ secrets.KMM_KONFIG_PROPERTIES }}
        run: |
          touch ../buildKonfig.properties
          echo $KMM_KONFIG_PROPERTIES | base64 --decode > ../buildKonfig.properties

      - name: Paste Google-Info.plist from .secrets
        env:
          IOS_GOOGLE_SERVICE_INFO_PRODUCTION: ${{ secrets.IOS_PRODUCTION_GOOGLE_INFO_PLIST }}
        run: |
          mkdir -p PhongKMMIC/Configurations/Plists/GoogleService/Production
          echo $IOS_GOOGLE_SERVICE_INFO_PRODUCTION | base64 --decode > ./PhongKMMIC/Configurations/Plists/GoogleService/Production/GoogleService-Info.plist

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate KMM frameworks for Cocoapods
        run: |
          cd ..
          ./gradlew generateDummyFramework

      - name: Cache Pods
        uses: actions/cache@v3
        id: cocoapodCache
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods Dependencies
        run: bundle exec pod install

      - name: Build and Test
        run: bundle exec fastlane buildAndTest

      - name: Sync AppStore Production Signing
        env:
          CI: true
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: bundle exec fastlane syncAppStoreCodeSigning

      - name: Build and Upload to AppStore Connect
        env:
          APPSTORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_CONNECT_API_KEY }}
          API_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
          ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
        run: bundle exec fastlane buildAndUploadToAppStore

